/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ordering.cmd.response.v_0;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Line_Item extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7602761758087532637L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Line_Item\",\"namespace\":\"ordering.cmd.response.v_0\",\"fields\":[{\"name\":\"item_number\",\"type\":\"string\"},{\"name\":\"line_number\",\"type\":\"int\"},{\"name\":\"order_quantity\",\"type\":\"int\"},{\"name\":\"confirmed_quantity\",\"type\":\"int\"},{\"name\":\"ordering_unit_of_measure\",\"type\":{\"type\":\"enum\",\"name\":\"Ordering_Unit_Of_Measure\",\"symbols\":[\"CS\",\"EA\"]}},{\"name\":\"price\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"pricing_type\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"Pricing_Type\",\"symbols\":[\"DEFAULT_PRICE\",\"HAND_PRICE\",\"SUB_HAND_PRICE\",\"LAST_MARGIN_PRICE\",\"LOCK_PRICE\",\"CLOUD_PRICE\"]}],\"default\":null},{\"name\":\"substituted_item\",\"type\":\"boolean\",\"default\":false},{\"name\":\"sub_reason_type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"original_item_number\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"original_item_line_number\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"confirmed\",\"type\":\"boolean\",\"doc\":\"Indicator to denote whether the item has been allocated or not\",\"default\":false},{\"name\":\"item_extn\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Item_Extn\",\"fields\":[{\"name\":\"demand_quantity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"stock_type\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gross_commission_basis\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"gross_price\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"minimum_gross_price\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"maximum_gross_price\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"dollars_off\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null},{\"name\":\"guranteed_price\",\"type\":\"boolean\",\"default\":false},{\"name\":\"available_stock\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"next_ship_date\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"next_ship_quantity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"customer_item_number\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"pack\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"size\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"brand\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"new_record\",\"type\":\"boolean\",\"default\":false}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Line_Item> ENCODER =
      new BinaryMessageEncoder<Line_Item>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Line_Item> DECODER =
      new BinaryMessageDecoder<Line_Item>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Line_Item> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Line_Item> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Line_Item> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Line_Item>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Line_Item to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Line_Item from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Line_Item instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Line_Item fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence item_number;
   private int line_number;
   private int order_quantity;
   private int confirmed_quantity;
   private ordering.cmd.response.v_0.Ordering_Unit_Of_Measure ordering_unit_of_measure;
   private java.math.BigDecimal price;
   private ordering.cmd.response.v_0.Pricing_Type pricing_type;
   private boolean substituted_item;
   private java.lang.CharSequence sub_reason_type;
   private java.lang.CharSequence original_item_number;
   private java.lang.Integer original_item_line_number;
  /** Indicator to denote whether the item has been allocated or not */
   private boolean confirmed;
   private ordering.cmd.response.v_0.Item_Extn item_extn;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Line_Item() {}

  /**
   * All-args constructor.
   * @param item_number The new value for item_number
   * @param line_number The new value for line_number
   * @param order_quantity The new value for order_quantity
   * @param confirmed_quantity The new value for confirmed_quantity
   * @param ordering_unit_of_measure The new value for ordering_unit_of_measure
   * @param price The new value for price
   * @param pricing_type The new value for pricing_type
   * @param substituted_item The new value for substituted_item
   * @param sub_reason_type The new value for sub_reason_type
   * @param original_item_number The new value for original_item_number
   * @param original_item_line_number The new value for original_item_line_number
   * @param confirmed Indicator to denote whether the item has been allocated or not
   * @param item_extn The new value for item_extn
   */
  public Line_Item(java.lang.CharSequence item_number, java.lang.Integer line_number, java.lang.Integer order_quantity, java.lang.Integer confirmed_quantity, ordering.cmd.response.v_0.Ordering_Unit_Of_Measure ordering_unit_of_measure, java.math.BigDecimal price, ordering.cmd.response.v_0.Pricing_Type pricing_type, java.lang.Boolean substituted_item, java.lang.CharSequence sub_reason_type, java.lang.CharSequence original_item_number, java.lang.Integer original_item_line_number, java.lang.Boolean confirmed, ordering.cmd.response.v_0.Item_Extn item_extn) {
    this.item_number = item_number;
    this.line_number = line_number;
    this.order_quantity = order_quantity;
    this.confirmed_quantity = confirmed_quantity;
    this.ordering_unit_of_measure = ordering_unit_of_measure;
    this.price = price;
    this.pricing_type = pricing_type;
    this.substituted_item = substituted_item;
    this.sub_reason_type = sub_reason_type;
    this.original_item_number = original_item_number;
    this.original_item_line_number = original_item_line_number;
    this.confirmed = confirmed;
    this.item_extn = item_extn;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return item_number;
    case 1: return line_number;
    case 2: return order_quantity;
    case 3: return confirmed_quantity;
    case 4: return ordering_unit_of_measure;
    case 5: return price;
    case 6: return pricing_type;
    case 7: return substituted_item;
    case 8: return sub_reason_type;
    case 9: return original_item_number;
    case 10: return original_item_line_number;
    case 11: return confirmed;
    case 12: return item_extn;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: item_number = (java.lang.CharSequence)value$; break;
    case 1: line_number = (java.lang.Integer)value$; break;
    case 2: order_quantity = (java.lang.Integer)value$; break;
    case 3: confirmed_quantity = (java.lang.Integer)value$; break;
    case 4: ordering_unit_of_measure = (ordering.cmd.response.v_0.Ordering_Unit_Of_Measure)value$; break;
    case 5: price = (java.math.BigDecimal)value$; break;
    case 6: pricing_type = (ordering.cmd.response.v_0.Pricing_Type)value$; break;
    case 7: substituted_item = (java.lang.Boolean)value$; break;
    case 8: sub_reason_type = (java.lang.CharSequence)value$; break;
    case 9: original_item_number = (java.lang.CharSequence)value$; break;
    case 10: original_item_line_number = (java.lang.Integer)value$; break;
    case 11: confirmed = (java.lang.Boolean)value$; break;
    case 12: item_extn = (ordering.cmd.response.v_0.Item_Extn)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'item_number' field.
   * @return The value of the 'item_number' field.
   */
  public java.lang.CharSequence getItemNumber() {
    return item_number;
  }


  /**
   * Sets the value of the 'item_number' field.
   * @param value the value to set.
   */
  public void setItemNumber(java.lang.CharSequence value) {
    this.item_number = value;
  }

  /**
   * Gets the value of the 'line_number' field.
   * @return The value of the 'line_number' field.
   */
  public int getLineNumber() {
    return line_number;
  }


  /**
   * Sets the value of the 'line_number' field.
   * @param value the value to set.
   */
  public void setLineNumber(int value) {
    this.line_number = value;
  }

  /**
   * Gets the value of the 'order_quantity' field.
   * @return The value of the 'order_quantity' field.
   */
  public int getOrderQuantity() {
    return order_quantity;
  }


  /**
   * Sets the value of the 'order_quantity' field.
   * @param value the value to set.
   */
  public void setOrderQuantity(int value) {
    this.order_quantity = value;
  }

  /**
   * Gets the value of the 'confirmed_quantity' field.
   * @return The value of the 'confirmed_quantity' field.
   */
  public int getConfirmedQuantity() {
    return confirmed_quantity;
  }


  /**
   * Sets the value of the 'confirmed_quantity' field.
   * @param value the value to set.
   */
  public void setConfirmedQuantity(int value) {
    this.confirmed_quantity = value;
  }

  /**
   * Gets the value of the 'ordering_unit_of_measure' field.
   * @return The value of the 'ordering_unit_of_measure' field.
   */
  public ordering.cmd.response.v_0.Ordering_Unit_Of_Measure getOrderingUnitOfMeasure() {
    return ordering_unit_of_measure;
  }


  /**
   * Sets the value of the 'ordering_unit_of_measure' field.
   * @param value the value to set.
   */
  public void setOrderingUnitOfMeasure(ordering.cmd.response.v_0.Ordering_Unit_Of_Measure value) {
    this.ordering_unit_of_measure = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.math.BigDecimal getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.math.BigDecimal value) {
    this.price = value;
  }

  /**
   * Gets the value of the 'pricing_type' field.
   * @return The value of the 'pricing_type' field.
   */
  public ordering.cmd.response.v_0.Pricing_Type getPricingType() {
    return pricing_type;
  }


  /**
   * Sets the value of the 'pricing_type' field.
   * @param value the value to set.
   */
  public void setPricingType(ordering.cmd.response.v_0.Pricing_Type value) {
    this.pricing_type = value;
  }

  /**
   * Gets the value of the 'substituted_item' field.
   * @return The value of the 'substituted_item' field.
   */
  public boolean getSubstitutedItem() {
    return substituted_item;
  }


  /**
   * Sets the value of the 'substituted_item' field.
   * @param value the value to set.
   */
  public void setSubstitutedItem(boolean value) {
    this.substituted_item = value;
  }

  /**
   * Gets the value of the 'sub_reason_type' field.
   * @return The value of the 'sub_reason_type' field.
   */
  public java.lang.CharSequence getSubReasonType() {
    return sub_reason_type;
  }


  /**
   * Sets the value of the 'sub_reason_type' field.
   * @param value the value to set.
   */
  public void setSubReasonType(java.lang.CharSequence value) {
    this.sub_reason_type = value;
  }

  /**
   * Gets the value of the 'original_item_number' field.
   * @return The value of the 'original_item_number' field.
   */
  public java.lang.CharSequence getOriginalItemNumber() {
    return original_item_number;
  }


  /**
   * Sets the value of the 'original_item_number' field.
   * @param value the value to set.
   */
  public void setOriginalItemNumber(java.lang.CharSequence value) {
    this.original_item_number = value;
  }

  /**
   * Gets the value of the 'original_item_line_number' field.
   * @return The value of the 'original_item_line_number' field.
   */
  public java.lang.Integer getOriginalItemLineNumber() {
    return original_item_line_number;
  }


  /**
   * Sets the value of the 'original_item_line_number' field.
   * @param value the value to set.
   */
  public void setOriginalItemLineNumber(java.lang.Integer value) {
    this.original_item_line_number = value;
  }

  /**
   * Gets the value of the 'confirmed' field.
   * @return Indicator to denote whether the item has been allocated or not
   */
  public boolean getConfirmed() {
    return confirmed;
  }


  /**
   * Sets the value of the 'confirmed' field.
   * Indicator to denote whether the item has been allocated or not
   * @param value the value to set.
   */
  public void setConfirmed(boolean value) {
    this.confirmed = value;
  }

  /**
   * Gets the value of the 'item_extn' field.
   * @return The value of the 'item_extn' field.
   */
  public ordering.cmd.response.v_0.Item_Extn getItemExtn() {
    return item_extn;
  }


  /**
   * Sets the value of the 'item_extn' field.
   * @param value the value to set.
   */
  public void setItemExtn(ordering.cmd.response.v_0.Item_Extn value) {
    this.item_extn = value;
  }

  /**
   * Creates a new Line_Item RecordBuilder.
   * @return A new Line_Item RecordBuilder
   */
  public static ordering.cmd.response.v_0.Line_Item.Builder newBuilder() {
    return new ordering.cmd.response.v_0.Line_Item.Builder();
  }

  /**
   * Creates a new Line_Item RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Line_Item RecordBuilder
   */
  public static ordering.cmd.response.v_0.Line_Item.Builder newBuilder(ordering.cmd.response.v_0.Line_Item.Builder other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Line_Item.Builder();
    } else {
      return new ordering.cmd.response.v_0.Line_Item.Builder(other);
    }
  }

  /**
   * Creates a new Line_Item RecordBuilder by copying an existing Line_Item instance.
   * @param other The existing instance to copy.
   * @return A new Line_Item RecordBuilder
   */
  public static ordering.cmd.response.v_0.Line_Item.Builder newBuilder(ordering.cmd.response.v_0.Line_Item other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Line_Item.Builder();
    } else {
      return new ordering.cmd.response.v_0.Line_Item.Builder(other);
    }
  }

  /**
   * RecordBuilder for Line_Item instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Line_Item>
    implements org.apache.avro.data.RecordBuilder<Line_Item> {

    private java.lang.CharSequence item_number;
    private int line_number;
    private int order_quantity;
    private int confirmed_quantity;
    private ordering.cmd.response.v_0.Ordering_Unit_Of_Measure ordering_unit_of_measure;
    private java.math.BigDecimal price;
    private ordering.cmd.response.v_0.Pricing_Type pricing_type;
    private boolean substituted_item;
    private java.lang.CharSequence sub_reason_type;
    private java.lang.CharSequence original_item_number;
    private java.lang.Integer original_item_line_number;
    /** Indicator to denote whether the item has been allocated or not */
    private boolean confirmed;
    private ordering.cmd.response.v_0.Item_Extn item_extn;
    private ordering.cmd.response.v_0.Item_Extn.Builder item_extnBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ordering.cmd.response.v_0.Line_Item.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.item_number)) {
        this.item_number = data().deepCopy(fields()[0].schema(), other.item_number);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.line_number)) {
        this.line_number = data().deepCopy(fields()[1].schema(), other.line_number);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.order_quantity)) {
        this.order_quantity = data().deepCopy(fields()[2].schema(), other.order_quantity);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.confirmed_quantity)) {
        this.confirmed_quantity = data().deepCopy(fields()[3].schema(), other.confirmed_quantity);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.ordering_unit_of_measure)) {
        this.ordering_unit_of_measure = data().deepCopy(fields()[4].schema(), other.ordering_unit_of_measure);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.pricing_type)) {
        this.pricing_type = data().deepCopy(fields()[6].schema(), other.pricing_type);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.substituted_item)) {
        this.substituted_item = data().deepCopy(fields()[7].schema(), other.substituted_item);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.sub_reason_type)) {
        this.sub_reason_type = data().deepCopy(fields()[8].schema(), other.sub_reason_type);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.original_item_number)) {
        this.original_item_number = data().deepCopy(fields()[9].schema(), other.original_item_number);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.original_item_line_number)) {
        this.original_item_line_number = data().deepCopy(fields()[10].schema(), other.original_item_line_number);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.confirmed)) {
        this.confirmed = data().deepCopy(fields()[11].schema(), other.confirmed);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.item_extn)) {
        this.item_extn = data().deepCopy(fields()[12].schema(), other.item_extn);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasItemExtnBuilder()) {
        this.item_extnBuilder = ordering.cmd.response.v_0.Item_Extn.newBuilder(other.getItemExtnBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Line_Item instance
     * @param other The existing instance to copy.
     */
    private Builder(ordering.cmd.response.v_0.Line_Item other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.item_number)) {
        this.item_number = data().deepCopy(fields()[0].schema(), other.item_number);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.line_number)) {
        this.line_number = data().deepCopy(fields()[1].schema(), other.line_number);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.order_quantity)) {
        this.order_quantity = data().deepCopy(fields()[2].schema(), other.order_quantity);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.confirmed_quantity)) {
        this.confirmed_quantity = data().deepCopy(fields()[3].schema(), other.confirmed_quantity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ordering_unit_of_measure)) {
        this.ordering_unit_of_measure = data().deepCopy(fields()[4].schema(), other.ordering_unit_of_measure);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.price)) {
        this.price = data().deepCopy(fields()[5].schema(), other.price);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.pricing_type)) {
        this.pricing_type = data().deepCopy(fields()[6].schema(), other.pricing_type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.substituted_item)) {
        this.substituted_item = data().deepCopy(fields()[7].schema(), other.substituted_item);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.sub_reason_type)) {
        this.sub_reason_type = data().deepCopy(fields()[8].schema(), other.sub_reason_type);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.original_item_number)) {
        this.original_item_number = data().deepCopy(fields()[9].schema(), other.original_item_number);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.original_item_line_number)) {
        this.original_item_line_number = data().deepCopy(fields()[10].schema(), other.original_item_line_number);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.confirmed)) {
        this.confirmed = data().deepCopy(fields()[11].schema(), other.confirmed);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.item_extn)) {
        this.item_extn = data().deepCopy(fields()[12].schema(), other.item_extn);
        fieldSetFlags()[12] = true;
      }
      this.item_extnBuilder = null;
    }

    /**
      * Gets the value of the 'item_number' field.
      * @return The value.
      */
    public java.lang.CharSequence getItemNumber() {
      return item_number;
    }


    /**
      * Sets the value of the 'item_number' field.
      * @param value The value of 'item_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setItemNumber(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.item_number = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'item_number' field has been set.
      * @return True if the 'item_number' field has been set, false otherwise.
      */
    public boolean hasItemNumber() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'item_number' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearItemNumber() {
      item_number = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'line_number' field.
      * @return The value.
      */
    public int getLineNumber() {
      return line_number;
    }


    /**
      * Sets the value of the 'line_number' field.
      * @param value The value of 'line_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setLineNumber(int value) {
      validate(fields()[1], value);
      this.line_number = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'line_number' field has been set.
      * @return True if the 'line_number' field has been set, false otherwise.
      */
    public boolean hasLineNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'line_number' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearLineNumber() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_quantity' field.
      * @return The value.
      */
    public int getOrderQuantity() {
      return order_quantity;
    }


    /**
      * Sets the value of the 'order_quantity' field.
      * @param value The value of 'order_quantity'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setOrderQuantity(int value) {
      validate(fields()[2], value);
      this.order_quantity = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'order_quantity' field has been set.
      * @return True if the 'order_quantity' field has been set, false otherwise.
      */
    public boolean hasOrderQuantity() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'order_quantity' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearOrderQuantity() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'confirmed_quantity' field.
      * @return The value.
      */
    public int getConfirmedQuantity() {
      return confirmed_quantity;
    }


    /**
      * Sets the value of the 'confirmed_quantity' field.
      * @param value The value of 'confirmed_quantity'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setConfirmedQuantity(int value) {
      validate(fields()[3], value);
      this.confirmed_quantity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'confirmed_quantity' field has been set.
      * @return True if the 'confirmed_quantity' field has been set, false otherwise.
      */
    public boolean hasConfirmedQuantity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'confirmed_quantity' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearConfirmedQuantity() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordering_unit_of_measure' field.
      * @return The value.
      */
    public ordering.cmd.response.v_0.Ordering_Unit_Of_Measure getOrderingUnitOfMeasure() {
      return ordering_unit_of_measure;
    }


    /**
      * Sets the value of the 'ordering_unit_of_measure' field.
      * @param value The value of 'ordering_unit_of_measure'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setOrderingUnitOfMeasure(ordering.cmd.response.v_0.Ordering_Unit_Of_Measure value) {
      validate(fields()[4], value);
      this.ordering_unit_of_measure = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ordering_unit_of_measure' field has been set.
      * @return True if the 'ordering_unit_of_measure' field has been set, false otherwise.
      */
    public boolean hasOrderingUnitOfMeasure() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ordering_unit_of_measure' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearOrderingUnitOfMeasure() {
      ordering_unit_of_measure = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setPrice(java.math.BigDecimal value) {
      validate(fields()[5], value);
      this.price = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearPrice() {
      price = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'pricing_type' field.
      * @return The value.
      */
    public ordering.cmd.response.v_0.Pricing_Type getPricingType() {
      return pricing_type;
    }


    /**
      * Sets the value of the 'pricing_type' field.
      * @param value The value of 'pricing_type'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setPricingType(ordering.cmd.response.v_0.Pricing_Type value) {
      validate(fields()[6], value);
      this.pricing_type = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'pricing_type' field has been set.
      * @return True if the 'pricing_type' field has been set, false otherwise.
      */
    public boolean hasPricingType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'pricing_type' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearPricingType() {
      pricing_type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'substituted_item' field.
      * @return The value.
      */
    public boolean getSubstitutedItem() {
      return substituted_item;
    }


    /**
      * Sets the value of the 'substituted_item' field.
      * @param value The value of 'substituted_item'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setSubstitutedItem(boolean value) {
      validate(fields()[7], value);
      this.substituted_item = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'substituted_item' field has been set.
      * @return True if the 'substituted_item' field has been set, false otherwise.
      */
    public boolean hasSubstitutedItem() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'substituted_item' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearSubstitutedItem() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'sub_reason_type' field.
      * @return The value.
      */
    public java.lang.CharSequence getSubReasonType() {
      return sub_reason_type;
    }


    /**
      * Sets the value of the 'sub_reason_type' field.
      * @param value The value of 'sub_reason_type'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setSubReasonType(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.sub_reason_type = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'sub_reason_type' field has been set.
      * @return True if the 'sub_reason_type' field has been set, false otherwise.
      */
    public boolean hasSubReasonType() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'sub_reason_type' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearSubReasonType() {
      sub_reason_type = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'original_item_number' field.
      * @return The value.
      */
    public java.lang.CharSequence getOriginalItemNumber() {
      return original_item_number;
    }


    /**
      * Sets the value of the 'original_item_number' field.
      * @param value The value of 'original_item_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setOriginalItemNumber(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.original_item_number = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'original_item_number' field has been set.
      * @return True if the 'original_item_number' field has been set, false otherwise.
      */
    public boolean hasOriginalItemNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'original_item_number' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearOriginalItemNumber() {
      original_item_number = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'original_item_line_number' field.
      * @return The value.
      */
    public java.lang.Integer getOriginalItemLineNumber() {
      return original_item_line_number;
    }


    /**
      * Sets the value of the 'original_item_line_number' field.
      * @param value The value of 'original_item_line_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setOriginalItemLineNumber(java.lang.Integer value) {
      validate(fields()[10], value);
      this.original_item_line_number = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'original_item_line_number' field has been set.
      * @return True if the 'original_item_line_number' field has been set, false otherwise.
      */
    public boolean hasOriginalItemLineNumber() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'original_item_line_number' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearOriginalItemLineNumber() {
      original_item_line_number = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'confirmed' field.
      * Indicator to denote whether the item has been allocated or not
      * @return The value.
      */
    public boolean getConfirmed() {
      return confirmed;
    }


    /**
      * Sets the value of the 'confirmed' field.
      * Indicator to denote whether the item has been allocated or not
      * @param value The value of 'confirmed'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setConfirmed(boolean value) {
      validate(fields()[11], value);
      this.confirmed = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'confirmed' field has been set.
      * Indicator to denote whether the item has been allocated or not
      * @return True if the 'confirmed' field has been set, false otherwise.
      */
    public boolean hasConfirmed() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'confirmed' field.
      * Indicator to denote whether the item has been allocated or not
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearConfirmed() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'item_extn' field.
      * @return The value.
      */
    public ordering.cmd.response.v_0.Item_Extn getItemExtn() {
      return item_extn;
    }


    /**
      * Sets the value of the 'item_extn' field.
      * @param value The value of 'item_extn'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder setItemExtn(ordering.cmd.response.v_0.Item_Extn value) {
      validate(fields()[12], value);
      this.item_extnBuilder = null;
      this.item_extn = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'item_extn' field has been set.
      * @return True if the 'item_extn' field has been set, false otherwise.
      */
    public boolean hasItemExtn() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'item_extn' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ordering.cmd.response.v_0.Item_Extn.Builder getItemExtnBuilder() {
      if (item_extnBuilder == null) {
        if (hasItemExtn()) {
          setItemExtnBuilder(ordering.cmd.response.v_0.Item_Extn.newBuilder(item_extn));
        } else {
          setItemExtnBuilder(ordering.cmd.response.v_0.Item_Extn.newBuilder());
        }
      }
      return item_extnBuilder;
    }

    /**
     * Sets the Builder instance for the 'item_extn' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ordering.cmd.response.v_0.Line_Item.Builder setItemExtnBuilder(ordering.cmd.response.v_0.Item_Extn.Builder value) {
      clearItemExtn();
      item_extnBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'item_extn' field has an active Builder instance
     * @return True if the 'item_extn' field has an active Builder instance
     */
    public boolean hasItemExtnBuilder() {
      return item_extnBuilder != null;
    }

    /**
      * Clears the value of the 'item_extn' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Line_Item.Builder clearItemExtn() {
      item_extn = null;
      item_extnBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Line_Item build() {
      try {
        Line_Item record = new Line_Item();
        record.item_number = fieldSetFlags()[0] ? this.item_number : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.line_number = fieldSetFlags()[1] ? this.line_number : (java.lang.Integer) defaultValue(fields()[1]);
        record.order_quantity = fieldSetFlags()[2] ? this.order_quantity : (java.lang.Integer) defaultValue(fields()[2]);
        record.confirmed_quantity = fieldSetFlags()[3] ? this.confirmed_quantity : (java.lang.Integer) defaultValue(fields()[3]);
        record.ordering_unit_of_measure = fieldSetFlags()[4] ? this.ordering_unit_of_measure : (ordering.cmd.response.v_0.Ordering_Unit_Of_Measure) defaultValue(fields()[4]);
        record.price = fieldSetFlags()[5] ? this.price : (java.math.BigDecimal) defaultValue(fields()[5]);
        record.pricing_type = fieldSetFlags()[6] ? this.pricing_type : (ordering.cmd.response.v_0.Pricing_Type) defaultValue(fields()[6]);
        record.substituted_item = fieldSetFlags()[7] ? this.substituted_item : (java.lang.Boolean) defaultValue(fields()[7]);
        record.sub_reason_type = fieldSetFlags()[8] ? this.sub_reason_type : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.original_item_number = fieldSetFlags()[9] ? this.original_item_number : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.original_item_line_number = fieldSetFlags()[10] ? this.original_item_line_number : (java.lang.Integer) defaultValue(fields()[10]);
        record.confirmed = fieldSetFlags()[11] ? this.confirmed : (java.lang.Boolean) defaultValue(fields()[11]);
        if (item_extnBuilder != null) {
          try {
            record.item_extn = this.item_extnBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("item_extn"));
            throw e;
          }
        } else {
          record.item_extn = fieldSetFlags()[12] ? this.item_extn : (ordering.cmd.response.v_0.Item_Extn) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Line_Item>
    WRITER$ = (org.apache.avro.io.DatumWriter<Line_Item>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Line_Item>
    READER$ = (org.apache.avro.io.DatumReader<Line_Item>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.item_number);

    out.writeInt(this.line_number);

    out.writeInt(this.order_quantity);

    out.writeInt(this.confirmed_quantity);

    out.writeEnum(this.ordering_unit_of_measure.ordinal());

    if (this.price == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.price.toString());
    }

    if (this.pricing_type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeEnum(this.pricing_type.ordinal());
    }

    out.writeBoolean(this.substituted_item);

    if (this.sub_reason_type == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sub_reason_type);
    }

    if (this.original_item_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.original_item_number);
    }

    if (this.original_item_line_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.original_item_line_number);
    }

    out.writeBoolean(this.confirmed);

    if (this.item_extn == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.item_extn.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.item_number = in.readString(this.item_number instanceof Utf8 ? (Utf8)this.item_number : null);

      this.line_number = in.readInt();

      this.order_quantity = in.readInt();

      this.confirmed_quantity = in.readInt();

      this.ordering_unit_of_measure = ordering.cmd.response.v_0.Ordering_Unit_Of_Measure.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.price = null;
      } else {
        this.price = new java.math.BigDecimal(in.readString());
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.pricing_type = null;
      } else {
        this.pricing_type = ordering.cmd.response.v_0.Pricing_Type.values()[in.readEnum()];
      }

      this.substituted_item = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.sub_reason_type = null;
      } else {
        this.sub_reason_type = in.readString(this.sub_reason_type instanceof Utf8 ? (Utf8)this.sub_reason_type : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.original_item_number = null;
      } else {
        this.original_item_number = in.readString(this.original_item_number instanceof Utf8 ? (Utf8)this.original_item_number : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.original_item_line_number = null;
      } else {
        this.original_item_line_number = in.readInt();
      }

      this.confirmed = in.readBoolean();

      if (in.readIndex() != 1) {
        in.readNull();
        this.item_extn = null;
      } else {
        if (this.item_extn == null) {
          this.item_extn = new ordering.cmd.response.v_0.Item_Extn();
        }
        this.item_extn.customDecode(in);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.item_number = in.readString(this.item_number instanceof Utf8 ? (Utf8)this.item_number : null);
          break;

        case 1:
          this.line_number = in.readInt();
          break;

        case 2:
          this.order_quantity = in.readInt();
          break;

        case 3:
          this.confirmed_quantity = in.readInt();
          break;

        case 4:
          this.ordering_unit_of_measure = ordering.cmd.response.v_0.Ordering_Unit_Of_Measure.values()[in.readEnum()];
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.price = null;
          } else {
            this.price = new java.math.BigDecimal(in.readString());
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.pricing_type = null;
          } else {
            this.pricing_type = ordering.cmd.response.v_0.Pricing_Type.values()[in.readEnum()];
          }
          break;

        case 7:
          this.substituted_item = in.readBoolean();
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sub_reason_type = null;
          } else {
            this.sub_reason_type = in.readString(this.sub_reason_type instanceof Utf8 ? (Utf8)this.sub_reason_type : null);
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.original_item_number = null;
          } else {
            this.original_item_number = in.readString(this.original_item_number instanceof Utf8 ? (Utf8)this.original_item_number : null);
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.original_item_line_number = null;
          } else {
            this.original_item_line_number = in.readInt();
          }
          break;

        case 11:
          this.confirmed = in.readBoolean();
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.item_extn = null;
          } else {
            if (this.item_extn == null) {
              this.item_extn = new ordering.cmd.response.v_0.Item_Extn();
            }
            this.item_extn.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










