/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ordering.cmd.response.v_0;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Details extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5855858632603406939L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Details\",\"namespace\":\"ordering.cmd.response.v_0\",\"fields\":[{\"name\":\"code\",\"type\":\"string\",\"doc\":\"Code for the specific exception\"},{\"name\":\"message\",\"type\":\"string\"},{\"name\":\"value\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"field\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"location\",\"type\":[\"null\",\"string\"],\"doc\":\"Line number related to the exception\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Details> ENCODER =
      new BinaryMessageEncoder<Details>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Details> DECODER =
      new BinaryMessageDecoder<Details>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Details> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Details> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Details> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Details>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Details to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Details from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Details instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Details fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Code for the specific exception */
   private java.lang.CharSequence code;
   private java.lang.CharSequence message;
   private java.lang.CharSequence value;
   private java.lang.CharSequence field;
  /** Line number related to the exception */
   private java.lang.CharSequence location;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Details() {}

  /**
   * All-args constructor.
   * @param code Code for the specific exception
   * @param message The new value for message
   * @param value The new value for value
   * @param field The new value for field
   * @param location Line number related to the exception
   */
  public Details(java.lang.CharSequence code, java.lang.CharSequence message, java.lang.CharSequence value, java.lang.CharSequence field, java.lang.CharSequence location) {
    this.code = code;
    this.message = message;
    this.value = value;
    this.field = field;
    this.location = location;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return code;
    case 1: return message;
    case 2: return value;
    case 3: return field;
    case 4: return location;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: code = (java.lang.CharSequence)value$; break;
    case 1: message = (java.lang.CharSequence)value$; break;
    case 2: value = (java.lang.CharSequence)value$; break;
    case 3: field = (java.lang.CharSequence)value$; break;
    case 4: location = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'code' field.
   * @return Code for the specific exception
   */
  public java.lang.CharSequence getCode() {
    return code;
  }


  /**
   * Sets the value of the 'code' field.
   * Code for the specific exception
   * @param value the value to set.
   */
  public void setCode(java.lang.CharSequence value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.CharSequence getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.CharSequence value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'value' field.
   * @return The value of the 'value' field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }


  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'field' field.
   * @return The value of the 'field' field.
   */
  public java.lang.CharSequence getField() {
    return field;
  }


  /**
   * Sets the value of the 'field' field.
   * @param value the value to set.
   */
  public void setField(java.lang.CharSequence value) {
    this.field = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return Line number related to the exception
   */
  public java.lang.CharSequence getLocation() {
    return location;
  }


  /**
   * Sets the value of the 'location' field.
   * Line number related to the exception
   * @param value the value to set.
   */
  public void setLocation(java.lang.CharSequence value) {
    this.location = value;
  }

  /**
   * Creates a new Details RecordBuilder.
   * @return A new Details RecordBuilder
   */
  public static ordering.cmd.response.v_0.Details.Builder newBuilder() {
    return new ordering.cmd.response.v_0.Details.Builder();
  }

  /**
   * Creates a new Details RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Details RecordBuilder
   */
  public static ordering.cmd.response.v_0.Details.Builder newBuilder(ordering.cmd.response.v_0.Details.Builder other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Details.Builder();
    } else {
      return new ordering.cmd.response.v_0.Details.Builder(other);
    }
  }

  /**
   * Creates a new Details RecordBuilder by copying an existing Details instance.
   * @param other The existing instance to copy.
   * @return A new Details RecordBuilder
   */
  public static ordering.cmd.response.v_0.Details.Builder newBuilder(ordering.cmd.response.v_0.Details other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Details.Builder();
    } else {
      return new ordering.cmd.response.v_0.Details.Builder(other);
    }
  }

  /**
   * RecordBuilder for Details instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Details>
    implements org.apache.avro.data.RecordBuilder<Details> {

    /** Code for the specific exception */
    private java.lang.CharSequence code;
    private java.lang.CharSequence message;
    private java.lang.CharSequence value;
    private java.lang.CharSequence field;
    /** Line number related to the exception */
    private java.lang.CharSequence location;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ordering.cmd.response.v_0.Details.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.field)) {
        this.field = data().deepCopy(fields()[3].schema(), other.field);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.location)) {
        this.location = data().deepCopy(fields()[4].schema(), other.location);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
    }

    /**
     * Creates a Builder by copying an existing Details instance
     * @param other The existing instance to copy.
     */
    private Builder(ordering.cmd.response.v_0.Details other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.code)) {
        this.code = data().deepCopy(fields()[0].schema(), other.code);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.message)) {
        this.message = data().deepCopy(fields()[1].schema(), other.message);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.value)) {
        this.value = data().deepCopy(fields()[2].schema(), other.value);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.field)) {
        this.field = data().deepCopy(fields()[3].schema(), other.field);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.location)) {
        this.location = data().deepCopy(fields()[4].schema(), other.location);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'code' field.
      * Code for the specific exception
      * @return The value.
      */
    public java.lang.CharSequence getCode() {
      return code;
    }


    /**
      * Sets the value of the 'code' field.
      * Code for the specific exception
      * @param value The value of 'code'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder setCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.code = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * Code for the specific exception
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'code' field.
      * Code for the specific exception
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder clearCode() {
      code = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.CharSequence getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder setMessage(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.message = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder clearMessage() {
      message = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.CharSequence getValue() {
      return value;
    }


    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.value = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder clearValue() {
      value = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'field' field.
      * @return The value.
      */
    public java.lang.CharSequence getField() {
      return field;
    }


    /**
      * Sets the value of the 'field' field.
      * @param value The value of 'field'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder setField(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.field = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'field' field has been set.
      * @return True if the 'field' field has been set, false otherwise.
      */
    public boolean hasField() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'field' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder clearField() {
      field = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * Line number related to the exception
      * @return The value.
      */
    public java.lang.CharSequence getLocation() {
      return location;
    }


    /**
      * Sets the value of the 'location' field.
      * Line number related to the exception
      * @param value The value of 'location'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder setLocation(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.location = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * Line number related to the exception
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'location' field.
      * Line number related to the exception
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Details.Builder clearLocation() {
      location = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Details build() {
      try {
        Details record = new Details();
        record.code = fieldSetFlags()[0] ? this.code : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.message = fieldSetFlags()[1] ? this.message : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.value = fieldSetFlags()[2] ? this.value : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.field = fieldSetFlags()[3] ? this.field : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.location = fieldSetFlags()[4] ? this.location : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Details>
    WRITER$ = (org.apache.avro.io.DatumWriter<Details>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Details>
    READER$ = (org.apache.avro.io.DatumReader<Details>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.code);

    out.writeString(this.message);

    if (this.value == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.value);
    }

    if (this.field == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.field);
    }

    if (this.location == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.location);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.code = in.readString(this.code instanceof Utf8 ? (Utf8)this.code : null);

      this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.value = null;
      } else {
        this.value = in.readString(this.value instanceof Utf8 ? (Utf8)this.value : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.field = null;
      } else {
        this.field = in.readString(this.field instanceof Utf8 ? (Utf8)this.field : null);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.location = null;
      } else {
        this.location = in.readString(this.location instanceof Utf8 ? (Utf8)this.location : null);
      }

    } else {
      for (int i = 0; i < 5; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.code = in.readString(this.code instanceof Utf8 ? (Utf8)this.code : null);
          break;

        case 1:
          this.message = in.readString(this.message instanceof Utf8 ? (Utf8)this.message : null);
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.value = null;
          } else {
            this.value = in.readString(this.value instanceof Utf8 ? (Utf8)this.value : null);
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.field = null;
          } else {
            this.field = in.readString(this.field instanceof Utf8 ? (Utf8)this.field : null);
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.location = null;
          } else {
            this.location = in.readString(this.location instanceof Utf8 ? (Utf8)this.location : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










