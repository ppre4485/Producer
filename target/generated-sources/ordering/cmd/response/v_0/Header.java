/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package ordering.cmd.response.v_0;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Header extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6841997424041283774L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Header\",\"namespace\":\"ordering.cmd.response.v_0\",\"fields\":[{\"name\":\"message_id\",\"type\":\"string\",\"doc\":\"Any unique identifier which may be used for de-duplication of messages during consumption\",\"exmaple\":\"d59d8d8c-c781-11eb-b8bc-0242ac130003\"},{\"name\":\"seller_id\",\"type\":\"string\",\"doc\":\"Identifier for the seller who’s products are contained in the order\",\"exmaple\":\"USBL, CABL etc.\"},{\"name\":\"site\",\"type\":\"string\",\"doc\":\"Operating company or distribution center number. [Use site_id instead of site]\",\"aliases\":[\"site_id\"]},{\"name\":\"customer_number\",\"type\":\"string\",\"doc\":\"Customer number as referenced within the seller’s system\"},{\"name\":\"order_number\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifier for the order as referenced within the seller’s system\",\"default\":null},{\"name\":\"delivery_date\",\"type\":\"string\",\"doc\":\"Delivery date of the order in the form of yyyy-MM-dd\",\"example\":\"2021-11-16\"},{\"name\":\"delivery_method\",\"type\":\"string\",\"doc\":\"The delivery method for the order\",\"example\":\"GROUND, WILL_CALL etc.\"},{\"name\":\"customer_po_number\",\"type\":[\"null\",\"string\"],\"doc\":\"Customer provided purchase order number\",\"default\":null},{\"name\":\"channel_order_id\",\"type\":\"string\",\"doc\":\"Identifier for the order as referenced within the ordering channel’s system\"},{\"name\":\"confirmed\",\"type\":\"boolean\",\"doc\":\"Indicator to denote whether item allocation has taken place\",\"default\":false},{\"name\":\"order_processed_on\",\"type\":{\"type\":\"string\",\"example\":\"2021-11-16T18:42:53.479Z\",\"logicalType\":\"timestmap-millis\"},\"doc\":\"The date/time when the order request was processed\"},{\"name\":\"ordering_channel\",\"type\":\"string\",\"doc\":\"The channel used for submitting the order\",\"example\":\"SHOP_WEB, SHOP_MOBILE, B2B etc.\"},{\"name\":\"extn\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Extn\",\"fields\":[{\"name\":\"miscellaneous_charges\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Miscellaneous_Charges\",\"fields\":[{\"name\":\"type\",\"type\":\"string\"},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.math.BigDecimal\"}],\"default\":null}]}],\"default\":null},{\"name\":\"order_suffix\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"order_line_count\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"total_lines_rejected\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"new_record\",\"type\":\"boolean\",\"default\":false},{\"name\":\"exception_level\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ship_with_next_order\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"quantity_received_by_host\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Header> ENCODER =
      new BinaryMessageEncoder<Header>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Header> DECODER =
      new BinaryMessageDecoder<Header>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Header> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Header> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Header> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Header>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Header to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Header from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Header instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Header fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Any unique identifier which may be used for de-duplication of messages during consumption */
   private java.lang.CharSequence message_id;
  /** Identifier for the seller who’s products are contained in the order */
   private java.lang.CharSequence seller_id;
  /** Operating company or distribution center number. [Use site_id instead of site] */
   private java.lang.CharSequence site;
  /** Customer number as referenced within the seller’s system */
   private java.lang.CharSequence customer_number;
  /** Identifier for the order as referenced within the seller’s system */
   private java.lang.CharSequence order_number;
  /** Delivery date of the order in the form of yyyy-MM-dd */
   private java.lang.CharSequence delivery_date;
  /** The delivery method for the order */
   private java.lang.CharSequence delivery_method;
  /** Customer provided purchase order number */
   private java.lang.CharSequence customer_po_number;
  /** Identifier for the order as referenced within the ordering channel’s system */
   private java.lang.CharSequence channel_order_id;
  /** Indicator to denote whether item allocation has taken place */
   private boolean confirmed;
  /** The date/time when the order request was processed */
   private java.lang.CharSequence order_processed_on;
  /** The channel used for submitting the order */
   private java.lang.CharSequence ordering_channel;
   private ordering.cmd.response.v_0.Extn extn;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Header() {}

  /**
   * All-args constructor.
   * @param message_id Any unique identifier which may be used for de-duplication of messages during consumption
   * @param seller_id Identifier for the seller who’s products are contained in the order
   * @param site Operating company or distribution center number. [Use site_id instead of site]
   * @param customer_number Customer number as referenced within the seller’s system
   * @param order_number Identifier for the order as referenced within the seller’s system
   * @param delivery_date Delivery date of the order in the form of yyyy-MM-dd
   * @param delivery_method The delivery method for the order
   * @param customer_po_number Customer provided purchase order number
   * @param channel_order_id Identifier for the order as referenced within the ordering channel’s system
   * @param confirmed Indicator to denote whether item allocation has taken place
   * @param order_processed_on The date/time when the order request was processed
   * @param ordering_channel The channel used for submitting the order
   * @param extn The new value for extn
   */
  public Header(java.lang.CharSequence message_id, java.lang.CharSequence seller_id, java.lang.CharSequence site, java.lang.CharSequence customer_number, java.lang.CharSequence order_number, java.lang.CharSequence delivery_date, java.lang.CharSequence delivery_method, java.lang.CharSequence customer_po_number, java.lang.CharSequence channel_order_id, java.lang.Boolean confirmed, java.lang.CharSequence order_processed_on, java.lang.CharSequence ordering_channel, ordering.cmd.response.v_0.Extn extn) {
    this.message_id = message_id;
    this.seller_id = seller_id;
    this.site = site;
    this.customer_number = customer_number;
    this.order_number = order_number;
    this.delivery_date = delivery_date;
    this.delivery_method = delivery_method;
    this.customer_po_number = customer_po_number;
    this.channel_order_id = channel_order_id;
    this.confirmed = confirmed;
    this.order_processed_on = order_processed_on;
    this.ordering_channel = ordering_channel;
    this.extn = extn;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return message_id;
    case 1: return seller_id;
    case 2: return site;
    case 3: return customer_number;
    case 4: return order_number;
    case 5: return delivery_date;
    case 6: return delivery_method;
    case 7: return customer_po_number;
    case 8: return channel_order_id;
    case 9: return confirmed;
    case 10: return order_processed_on;
    case 11: return ordering_channel;
    case 12: return extn;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: message_id = (java.lang.CharSequence)value$; break;
    case 1: seller_id = (java.lang.CharSequence)value$; break;
    case 2: site = (java.lang.CharSequence)value$; break;
    case 3: customer_number = (java.lang.CharSequence)value$; break;
    case 4: order_number = (java.lang.CharSequence)value$; break;
    case 5: delivery_date = (java.lang.CharSequence)value$; break;
    case 6: delivery_method = (java.lang.CharSequence)value$; break;
    case 7: customer_po_number = (java.lang.CharSequence)value$; break;
    case 8: channel_order_id = (java.lang.CharSequence)value$; break;
    case 9: confirmed = (java.lang.Boolean)value$; break;
    case 10: order_processed_on = (java.lang.CharSequence)value$; break;
    case 11: ordering_channel = (java.lang.CharSequence)value$; break;
    case 12: extn = (ordering.cmd.response.v_0.Extn)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'message_id' field.
   * @return Any unique identifier which may be used for de-duplication of messages during consumption
   */
  public java.lang.CharSequence getMessageId() {
    return message_id;
  }


  /**
   * Sets the value of the 'message_id' field.
   * Any unique identifier which may be used for de-duplication of messages during consumption
   * @param value the value to set.
   */
  public void setMessageId(java.lang.CharSequence value) {
    this.message_id = value;
  }

  /**
   * Gets the value of the 'seller_id' field.
   * @return Identifier for the seller who’s products are contained in the order
   */
  public java.lang.CharSequence getSellerId() {
    return seller_id;
  }


  /**
   * Sets the value of the 'seller_id' field.
   * Identifier for the seller who’s products are contained in the order
   * @param value the value to set.
   */
  public void setSellerId(java.lang.CharSequence value) {
    this.seller_id = value;
  }

  /**
   * Gets the value of the 'site' field.
   * @return Operating company or distribution center number. [Use site_id instead of site]
   */
  public java.lang.CharSequence getSite() {
    return site;
  }


  /**
   * Sets the value of the 'site' field.
   * Operating company or distribution center number. [Use site_id instead of site]
   * @param value the value to set.
   */
  public void setSite(java.lang.CharSequence value) {
    this.site = value;
  }

  /**
   * Gets the value of the 'customer_number' field.
   * @return Customer number as referenced within the seller’s system
   */
  public java.lang.CharSequence getCustomerNumber() {
    return customer_number;
  }


  /**
   * Sets the value of the 'customer_number' field.
   * Customer number as referenced within the seller’s system
   * @param value the value to set.
   */
  public void setCustomerNumber(java.lang.CharSequence value) {
    this.customer_number = value;
  }

  /**
   * Gets the value of the 'order_number' field.
   * @return Identifier for the order as referenced within the seller’s system
   */
  public java.lang.CharSequence getOrderNumber() {
    return order_number;
  }


  /**
   * Sets the value of the 'order_number' field.
   * Identifier for the order as referenced within the seller’s system
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.CharSequence value) {
    this.order_number = value;
  }

  /**
   * Gets the value of the 'delivery_date' field.
   * @return Delivery date of the order in the form of yyyy-MM-dd
   */
  public java.lang.CharSequence getDeliveryDate() {
    return delivery_date;
  }


  /**
   * Sets the value of the 'delivery_date' field.
   * Delivery date of the order in the form of yyyy-MM-dd
   * @param value the value to set.
   */
  public void setDeliveryDate(java.lang.CharSequence value) {
    this.delivery_date = value;
  }

  /**
   * Gets the value of the 'delivery_method' field.
   * @return The delivery method for the order
   */
  public java.lang.CharSequence getDeliveryMethod() {
    return delivery_method;
  }


  /**
   * Sets the value of the 'delivery_method' field.
   * The delivery method for the order
   * @param value the value to set.
   */
  public void setDeliveryMethod(java.lang.CharSequence value) {
    this.delivery_method = value;
  }

  /**
   * Gets the value of the 'customer_po_number' field.
   * @return Customer provided purchase order number
   */
  public java.lang.CharSequence getCustomerPoNumber() {
    return customer_po_number;
  }


  /**
   * Sets the value of the 'customer_po_number' field.
   * Customer provided purchase order number
   * @param value the value to set.
   */
  public void setCustomerPoNumber(java.lang.CharSequence value) {
    this.customer_po_number = value;
  }

  /**
   * Gets the value of the 'channel_order_id' field.
   * @return Identifier for the order as referenced within the ordering channel’s system
   */
  public java.lang.CharSequence getChannelOrderId() {
    return channel_order_id;
  }


  /**
   * Sets the value of the 'channel_order_id' field.
   * Identifier for the order as referenced within the ordering channel’s system
   * @param value the value to set.
   */
  public void setChannelOrderId(java.lang.CharSequence value) {
    this.channel_order_id = value;
  }

  /**
   * Gets the value of the 'confirmed' field.
   * @return Indicator to denote whether item allocation has taken place
   */
  public boolean getConfirmed() {
    return confirmed;
  }


  /**
   * Sets the value of the 'confirmed' field.
   * Indicator to denote whether item allocation has taken place
   * @param value the value to set.
   */
  public void setConfirmed(boolean value) {
    this.confirmed = value;
  }

  /**
   * Gets the value of the 'order_processed_on' field.
   * @return The date/time when the order request was processed
   */
  public java.lang.CharSequence getOrderProcessedOn() {
    return order_processed_on;
  }


  /**
   * Sets the value of the 'order_processed_on' field.
   * The date/time when the order request was processed
   * @param value the value to set.
   */
  public void setOrderProcessedOn(java.lang.CharSequence value) {
    this.order_processed_on = value;
  }

  /**
   * Gets the value of the 'ordering_channel' field.
   * @return The channel used for submitting the order
   */
  public java.lang.CharSequence getOrderingChannel() {
    return ordering_channel;
  }


  /**
   * Sets the value of the 'ordering_channel' field.
   * The channel used for submitting the order
   * @param value the value to set.
   */
  public void setOrderingChannel(java.lang.CharSequence value) {
    this.ordering_channel = value;
  }

  /**
   * Gets the value of the 'extn' field.
   * @return The value of the 'extn' field.
   */
  public ordering.cmd.response.v_0.Extn getExtn() {
    return extn;
  }


  /**
   * Sets the value of the 'extn' field.
   * @param value the value to set.
   */
  public void setExtn(ordering.cmd.response.v_0.Extn value) {
    this.extn = value;
  }

  /**
   * Creates a new Header RecordBuilder.
   * @return A new Header RecordBuilder
   */
  public static ordering.cmd.response.v_0.Header.Builder newBuilder() {
    return new ordering.cmd.response.v_0.Header.Builder();
  }

  /**
   * Creates a new Header RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Header RecordBuilder
   */
  public static ordering.cmd.response.v_0.Header.Builder newBuilder(ordering.cmd.response.v_0.Header.Builder other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Header.Builder();
    } else {
      return new ordering.cmd.response.v_0.Header.Builder(other);
    }
  }

  /**
   * Creates a new Header RecordBuilder by copying an existing Header instance.
   * @param other The existing instance to copy.
   * @return A new Header RecordBuilder
   */
  public static ordering.cmd.response.v_0.Header.Builder newBuilder(ordering.cmd.response.v_0.Header other) {
    if (other == null) {
      return new ordering.cmd.response.v_0.Header.Builder();
    } else {
      return new ordering.cmd.response.v_0.Header.Builder(other);
    }
  }

  /**
   * RecordBuilder for Header instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Header>
    implements org.apache.avro.data.RecordBuilder<Header> {

    /** Any unique identifier which may be used for de-duplication of messages during consumption */
    private java.lang.CharSequence message_id;
    /** Identifier for the seller who’s products are contained in the order */
    private java.lang.CharSequence seller_id;
    /** Operating company or distribution center number. [Use site_id instead of site] */
    private java.lang.CharSequence site;
    /** Customer number as referenced within the seller’s system */
    private java.lang.CharSequence customer_number;
    /** Identifier for the order as referenced within the seller’s system */
    private java.lang.CharSequence order_number;
    /** Delivery date of the order in the form of yyyy-MM-dd */
    private java.lang.CharSequence delivery_date;
    /** The delivery method for the order */
    private java.lang.CharSequence delivery_method;
    /** Customer provided purchase order number */
    private java.lang.CharSequence customer_po_number;
    /** Identifier for the order as referenced within the ordering channel’s system */
    private java.lang.CharSequence channel_order_id;
    /** Indicator to denote whether item allocation has taken place */
    private boolean confirmed;
    /** The date/time when the order request was processed */
    private java.lang.CharSequence order_processed_on;
    /** The channel used for submitting the order */
    private java.lang.CharSequence ordering_channel;
    private ordering.cmd.response.v_0.Extn extn;
    private ordering.cmd.response.v_0.Extn.Builder extnBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ordering.cmd.response.v_0.Header.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.seller_id)) {
        this.seller_id = data().deepCopy(fields()[1].schema(), other.seller_id);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.site)) {
        this.site = data().deepCopy(fields()[2].schema(), other.site);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.customer_number)) {
        this.customer_number = data().deepCopy(fields()[3].schema(), other.customer_number);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.order_number)) {
        this.order_number = data().deepCopy(fields()[4].schema(), other.order_number);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.delivery_date)) {
        this.delivery_date = data().deepCopy(fields()[5].schema(), other.delivery_date);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.delivery_method)) {
        this.delivery_method = data().deepCopy(fields()[6].schema(), other.delivery_method);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.customer_po_number)) {
        this.customer_po_number = data().deepCopy(fields()[7].schema(), other.customer_po_number);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.channel_order_id)) {
        this.channel_order_id = data().deepCopy(fields()[8].schema(), other.channel_order_id);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.confirmed)) {
        this.confirmed = data().deepCopy(fields()[9].schema(), other.confirmed);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.order_processed_on)) {
        this.order_processed_on = data().deepCopy(fields()[10].schema(), other.order_processed_on);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.ordering_channel)) {
        this.ordering_channel = data().deepCopy(fields()[11].schema(), other.ordering_channel);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.extn)) {
        this.extn = data().deepCopy(fields()[12].schema(), other.extn);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (other.hasExtnBuilder()) {
        this.extnBuilder = ordering.cmd.response.v_0.Extn.newBuilder(other.getExtnBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Header instance
     * @param other The existing instance to copy.
     */
    private Builder(ordering.cmd.response.v_0.Header other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.message_id)) {
        this.message_id = data().deepCopy(fields()[0].schema(), other.message_id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.seller_id)) {
        this.seller_id = data().deepCopy(fields()[1].schema(), other.seller_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.site)) {
        this.site = data().deepCopy(fields()[2].schema(), other.site);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customer_number)) {
        this.customer_number = data().deepCopy(fields()[3].schema(), other.customer_number);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.order_number)) {
        this.order_number = data().deepCopy(fields()[4].schema(), other.order_number);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.delivery_date)) {
        this.delivery_date = data().deepCopy(fields()[5].schema(), other.delivery_date);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.delivery_method)) {
        this.delivery_method = data().deepCopy(fields()[6].schema(), other.delivery_method);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.customer_po_number)) {
        this.customer_po_number = data().deepCopy(fields()[7].schema(), other.customer_po_number);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.channel_order_id)) {
        this.channel_order_id = data().deepCopy(fields()[8].schema(), other.channel_order_id);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.confirmed)) {
        this.confirmed = data().deepCopy(fields()[9].schema(), other.confirmed);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.order_processed_on)) {
        this.order_processed_on = data().deepCopy(fields()[10].schema(), other.order_processed_on);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.ordering_channel)) {
        this.ordering_channel = data().deepCopy(fields()[11].schema(), other.ordering_channel);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.extn)) {
        this.extn = data().deepCopy(fields()[12].schema(), other.extn);
        fieldSetFlags()[12] = true;
      }
      this.extnBuilder = null;
    }

    /**
      * Gets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return The value.
      */
    public java.lang.CharSequence getMessageId() {
      return message_id;
    }


    /**
      * Sets the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @param value The value of 'message_id'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setMessageId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.message_id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'message_id' field has been set.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return True if the 'message_id' field has been set, false otherwise.
      */
    public boolean hasMessageId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'message_id' field.
      * Any unique identifier which may be used for de-duplication of messages during consumption
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearMessageId() {
      message_id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'seller_id' field.
      * Identifier for the seller who’s products are contained in the order
      * @return The value.
      */
    public java.lang.CharSequence getSellerId() {
      return seller_id;
    }


    /**
      * Sets the value of the 'seller_id' field.
      * Identifier for the seller who’s products are contained in the order
      * @param value The value of 'seller_id'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setSellerId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.seller_id = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'seller_id' field has been set.
      * Identifier for the seller who’s products are contained in the order
      * @return True if the 'seller_id' field has been set, false otherwise.
      */
    public boolean hasSellerId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'seller_id' field.
      * Identifier for the seller who’s products are contained in the order
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearSellerId() {
      seller_id = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'site' field.
      * Operating company or distribution center number. [Use site_id instead of site]
      * @return The value.
      */
    public java.lang.CharSequence getSite() {
      return site;
    }


    /**
      * Sets the value of the 'site' field.
      * Operating company or distribution center number. [Use site_id instead of site]
      * @param value The value of 'site'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setSite(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.site = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'site' field has been set.
      * Operating company or distribution center number. [Use site_id instead of site]
      * @return True if the 'site' field has been set, false otherwise.
      */
    public boolean hasSite() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'site' field.
      * Operating company or distribution center number. [Use site_id instead of site]
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearSite() {
      site = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_number' field.
      * Customer number as referenced within the seller’s system
      * @return The value.
      */
    public java.lang.CharSequence getCustomerNumber() {
      return customer_number;
    }


    /**
      * Sets the value of the 'customer_number' field.
      * Customer number as referenced within the seller’s system
      * @param value The value of 'customer_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setCustomerNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.customer_number = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_number' field has been set.
      * Customer number as referenced within the seller’s system
      * @return True if the 'customer_number' field has been set, false otherwise.
      */
    public boolean hasCustomerNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customer_number' field.
      * Customer number as referenced within the seller’s system
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearCustomerNumber() {
      customer_number = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller’s system
      * @return The value.
      */
    public java.lang.CharSequence getOrderNumber() {
      return order_number;
    }


    /**
      * Sets the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller’s system
      * @param value The value of 'order_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setOrderNumber(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.order_number = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'order_number' field has been set.
      * Identifier for the order as referenced within the seller’s system
      * @return True if the 'order_number' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'order_number' field.
      * Identifier for the order as referenced within the seller’s system
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearOrderNumber() {
      order_number = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryDate() {
      return delivery_date;
    }


    /**
      * Sets the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @param value The value of 'delivery_date'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setDeliveryDate(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.delivery_date = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_date' field has been set.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return True if the 'delivery_date' field has been set, false otherwise.
      */
    public boolean hasDeliveryDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'delivery_date' field.
      * Delivery date of the order in the form of yyyy-MM-dd
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearDeliveryDate() {
      delivery_date = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'delivery_method' field.
      * The delivery method for the order
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryMethod() {
      return delivery_method;
    }


    /**
      * Sets the value of the 'delivery_method' field.
      * The delivery method for the order
      * @param value The value of 'delivery_method'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setDeliveryMethod(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.delivery_method = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'delivery_method' field has been set.
      * The delivery method for the order
      * @return True if the 'delivery_method' field has been set, false otherwise.
      */
    public boolean hasDeliveryMethod() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'delivery_method' field.
      * The delivery method for the order
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearDeliveryMethod() {
      delivery_method = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'customer_po_number' field.
      * Customer provided purchase order number
      * @return The value.
      */
    public java.lang.CharSequence getCustomerPoNumber() {
      return customer_po_number;
    }


    /**
      * Sets the value of the 'customer_po_number' field.
      * Customer provided purchase order number
      * @param value The value of 'customer_po_number'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setCustomerPoNumber(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.customer_po_number = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'customer_po_number' field has been set.
      * Customer provided purchase order number
      * @return True if the 'customer_po_number' field has been set, false otherwise.
      */
    public boolean hasCustomerPoNumber() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'customer_po_number' field.
      * Customer provided purchase order number
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearCustomerPoNumber() {
      customer_po_number = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'channel_order_id' field.
      * Identifier for the order as referenced within the ordering channel’s system
      * @return The value.
      */
    public java.lang.CharSequence getChannelOrderId() {
      return channel_order_id;
    }


    /**
      * Sets the value of the 'channel_order_id' field.
      * Identifier for the order as referenced within the ordering channel’s system
      * @param value The value of 'channel_order_id'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setChannelOrderId(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.channel_order_id = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'channel_order_id' field has been set.
      * Identifier for the order as referenced within the ordering channel’s system
      * @return True if the 'channel_order_id' field has been set, false otherwise.
      */
    public boolean hasChannelOrderId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'channel_order_id' field.
      * Identifier for the order as referenced within the ordering channel’s system
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearChannelOrderId() {
      channel_order_id = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'confirmed' field.
      * Indicator to denote whether item allocation has taken place
      * @return The value.
      */
    public boolean getConfirmed() {
      return confirmed;
    }


    /**
      * Sets the value of the 'confirmed' field.
      * Indicator to denote whether item allocation has taken place
      * @param value The value of 'confirmed'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setConfirmed(boolean value) {
      validate(fields()[9], value);
      this.confirmed = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'confirmed' field has been set.
      * Indicator to denote whether item allocation has taken place
      * @return True if the 'confirmed' field has been set, false otherwise.
      */
    public boolean hasConfirmed() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'confirmed' field.
      * Indicator to denote whether item allocation has taken place
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearConfirmed() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'order_processed_on' field.
      * The date/time when the order request was processed
      * @return The value.
      */
    public java.lang.CharSequence getOrderProcessedOn() {
      return order_processed_on;
    }


    /**
      * Sets the value of the 'order_processed_on' field.
      * The date/time when the order request was processed
      * @param value The value of 'order_processed_on'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setOrderProcessedOn(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.order_processed_on = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'order_processed_on' field has been set.
      * The date/time when the order request was processed
      * @return True if the 'order_processed_on' field has been set, false otherwise.
      */
    public boolean hasOrderProcessedOn() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'order_processed_on' field.
      * The date/time when the order request was processed
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearOrderProcessedOn() {
      order_processed_on = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordering_channel' field.
      * The channel used for submitting the order
      * @return The value.
      */
    public java.lang.CharSequence getOrderingChannel() {
      return ordering_channel;
    }


    /**
      * Sets the value of the 'ordering_channel' field.
      * The channel used for submitting the order
      * @param value The value of 'ordering_channel'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setOrderingChannel(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.ordering_channel = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'ordering_channel' field has been set.
      * The channel used for submitting the order
      * @return True if the 'ordering_channel' field has been set, false otherwise.
      */
    public boolean hasOrderingChannel() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'ordering_channel' field.
      * The channel used for submitting the order
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearOrderingChannel() {
      ordering_channel = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'extn' field.
      * @return The value.
      */
    public ordering.cmd.response.v_0.Extn getExtn() {
      return extn;
    }


    /**
      * Sets the value of the 'extn' field.
      * @param value The value of 'extn'.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder setExtn(ordering.cmd.response.v_0.Extn value) {
      validate(fields()[12], value);
      this.extnBuilder = null;
      this.extn = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'extn' field has been set.
      * @return True if the 'extn' field has been set, false otherwise.
      */
    public boolean hasExtn() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'extn' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public ordering.cmd.response.v_0.Extn.Builder getExtnBuilder() {
      if (extnBuilder == null) {
        if (hasExtn()) {
          setExtnBuilder(ordering.cmd.response.v_0.Extn.newBuilder(extn));
        } else {
          setExtnBuilder(ordering.cmd.response.v_0.Extn.newBuilder());
        }
      }
      return extnBuilder;
    }

    /**
     * Sets the Builder instance for the 'extn' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public ordering.cmd.response.v_0.Header.Builder setExtnBuilder(ordering.cmd.response.v_0.Extn.Builder value) {
      clearExtn();
      extnBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'extn' field has an active Builder instance
     * @return True if the 'extn' field has an active Builder instance
     */
    public boolean hasExtnBuilder() {
      return extnBuilder != null;
    }

    /**
      * Clears the value of the 'extn' field.
      * @return This builder.
      */
    public ordering.cmd.response.v_0.Header.Builder clearExtn() {
      extn = null;
      extnBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Header build() {
      try {
        Header record = new Header();
        record.message_id = fieldSetFlags()[0] ? this.message_id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.seller_id = fieldSetFlags()[1] ? this.seller_id : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.site = fieldSetFlags()[2] ? this.site : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.customer_number = fieldSetFlags()[3] ? this.customer_number : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.order_number = fieldSetFlags()[4] ? this.order_number : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.delivery_date = fieldSetFlags()[5] ? this.delivery_date : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.delivery_method = fieldSetFlags()[6] ? this.delivery_method : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.customer_po_number = fieldSetFlags()[7] ? this.customer_po_number : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.channel_order_id = fieldSetFlags()[8] ? this.channel_order_id : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.confirmed = fieldSetFlags()[9] ? this.confirmed : (java.lang.Boolean) defaultValue(fields()[9]);
        record.order_processed_on = fieldSetFlags()[10] ? this.order_processed_on : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.ordering_channel = fieldSetFlags()[11] ? this.ordering_channel : (java.lang.CharSequence) defaultValue(fields()[11]);
        if (extnBuilder != null) {
          try {
            record.extn = this.extnBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("extn"));
            throw e;
          }
        } else {
          record.extn = fieldSetFlags()[12] ? this.extn : (ordering.cmd.response.v_0.Extn) defaultValue(fields()[12]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Header>
    WRITER$ = (org.apache.avro.io.DatumWriter<Header>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Header>
    READER$ = (org.apache.avro.io.DatumReader<Header>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.message_id);

    out.writeString(this.seller_id);

    out.writeString(this.site);

    out.writeString(this.customer_number);

    if (this.order_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.order_number);
    }

    out.writeString(this.delivery_date);

    out.writeString(this.delivery_method);

    if (this.customer_po_number == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customer_po_number);
    }

    out.writeString(this.channel_order_id);

    out.writeBoolean(this.confirmed);

    out.writeString(this.order_processed_on);

    out.writeString(this.ordering_channel);

    if (this.extn == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.extn.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.message_id = in.readString(this.message_id instanceof Utf8 ? (Utf8)this.message_id : null);

      this.seller_id = in.readString(this.seller_id instanceof Utf8 ? (Utf8)this.seller_id : null);

      this.site = in.readString(this.site instanceof Utf8 ? (Utf8)this.site : null);

      this.customer_number = in.readString(this.customer_number instanceof Utf8 ? (Utf8)this.customer_number : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.order_number = null;
      } else {
        this.order_number = in.readString(this.order_number instanceof Utf8 ? (Utf8)this.order_number : null);
      }

      this.delivery_date = in.readString(this.delivery_date instanceof Utf8 ? (Utf8)this.delivery_date : null);

      this.delivery_method = in.readString(this.delivery_method instanceof Utf8 ? (Utf8)this.delivery_method : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.customer_po_number = null;
      } else {
        this.customer_po_number = in.readString(this.customer_po_number instanceof Utf8 ? (Utf8)this.customer_po_number : null);
      }

      this.channel_order_id = in.readString(this.channel_order_id instanceof Utf8 ? (Utf8)this.channel_order_id : null);

      this.confirmed = in.readBoolean();

      this.order_processed_on = in.readString(this.order_processed_on instanceof Utf8 ? (Utf8)this.order_processed_on : null);

      this.ordering_channel = in.readString(this.ordering_channel instanceof Utf8 ? (Utf8)this.ordering_channel : null);

      if (in.readIndex() != 1) {
        in.readNull();
        this.extn = null;
      } else {
        if (this.extn == null) {
          this.extn = new ordering.cmd.response.v_0.Extn();
        }
        this.extn.customDecode(in);
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.message_id = in.readString(this.message_id instanceof Utf8 ? (Utf8)this.message_id : null);
          break;

        case 1:
          this.seller_id = in.readString(this.seller_id instanceof Utf8 ? (Utf8)this.seller_id : null);
          break;

        case 2:
          this.site = in.readString(this.site instanceof Utf8 ? (Utf8)this.site : null);
          break;

        case 3:
          this.customer_number = in.readString(this.customer_number instanceof Utf8 ? (Utf8)this.customer_number : null);
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.order_number = null;
          } else {
            this.order_number = in.readString(this.order_number instanceof Utf8 ? (Utf8)this.order_number : null);
          }
          break;

        case 5:
          this.delivery_date = in.readString(this.delivery_date instanceof Utf8 ? (Utf8)this.delivery_date : null);
          break;

        case 6:
          this.delivery_method = in.readString(this.delivery_method instanceof Utf8 ? (Utf8)this.delivery_method : null);
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customer_po_number = null;
          } else {
            this.customer_po_number = in.readString(this.customer_po_number instanceof Utf8 ? (Utf8)this.customer_po_number : null);
          }
          break;

        case 8:
          this.channel_order_id = in.readString(this.channel_order_id instanceof Utf8 ? (Utf8)this.channel_order_id : null);
          break;

        case 9:
          this.confirmed = in.readBoolean();
          break;

        case 10:
          this.order_processed_on = in.readString(this.order_processed_on instanceof Utf8 ? (Utf8)this.order_processed_on : null);
          break;

        case 11:
          this.ordering_channel = in.readString(this.ordering_channel instanceof Utf8 ? (Utf8)this.ordering_channel : null);
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.extn = null;
          } else {
            if (this.extn == null) {
              this.extn = new ordering.cmd.response.v_0.Extn();
            }
            this.extn.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










